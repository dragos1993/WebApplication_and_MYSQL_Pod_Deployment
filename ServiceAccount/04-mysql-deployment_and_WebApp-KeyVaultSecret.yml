apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      serviceAccountName: usermgmt-sa
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      containers:
        - name: mysql
          image: mysql:5.6
          command: ["/bin/bash", "-c"]
          args:
            - |
              export MYSQL_ROOT_PASSWORD=$(cat /mnt/secrets-store/db-password)
              exec docker-entrypoint.sh mysqld
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: usermanagement-dbcreation-script
              mountPath: /docker-entrypoint-initdb.d
            - name: secrets-store
              mountPath: /mnt/secrets-store
              readOnly: true
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: azure-managed-disk-pvc
        - name: usermanagement-dbcreation-script
          configMap:
            name: usermanagement-dbcreation-script
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: mysql-kv-provider

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: usermgmt-webapp
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usermgmt-webapp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: usermgmt-webapp
    spec:
      serviceAccountName: usermgmt-sa
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      volumes:
        - name: projected-volume
          projected:
            sources:
              - configMap:
                  name: kube-root-ca.crt
                  optional: false
              - downwardAPI:
                  items:
                    - path: "labels"
                      fieldRef:
                        fieldPath: metadata.labels
      initContainers:
        - name: init-db
          image: busybox:1.31
          command:
            - sh
            - -c
            - |
              echo "Checking for the availability of MySQL Server deployment";
              while ! nc -z mysql 3306; do
                sleep 1;
                printf "-";
              done;
              echo "  >> MySQL DB Server has started";
      containers:
        - name: usermgmt-webapp
          image: acrrg9.azurecr.io/kube-usermgmt-webapp:1.0.0-MySQLDB
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOSTNAME
              value: mysql
            - name: DB_PORT
              value: "3306"
            - name: DB_NAME
              value: webappdb
            - name: DB_USERNAME
              value: root
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-db-password
                  key: db-password